package com.product.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.view.RedirectView;

import com.paypal.api.payments.Links;
import com.paypal.api.payments.Payment;
import com.paypal.base.rest.APIContext;
import com.paypal.base.rest.PayPalRESTException;
import com.product.services.PayPalService;

import lombok.RequiredArgsConstructor;

@Controller
@RequestMapping("/payment")
@RequiredArgsConstructor
public class PayPalController {
    
    @Autowired
    PayPalService service;
    
    @GetMapping("/product/id/payment/home")
    public String home() {
        return "home";
    }
    
//    @PostMapping("/product")
//    public String createPayment() {
//        try {
//            // Ensure the APIContext is not null
//            APIContext apiContext = PayPalService.getAPIContext();
//            if (apiContext == null) {
//                throw new IllegalArgumentException("APIContext is null");
//            }
//
//            // Proceed with payment logic...
//            return "Payment initiated!";
//        } catch (Exception e) {
//            return "Error: " + e.getMessage();
//            
//        }
//        }
@PostMapping("/product")
        public RedirectView createPayment() {
            try {
                APIContext apiContext = service.getAPIContext(); 

                Payment payment = service.createPayment(10.0, "USD", "paypal",
                        "sale", "Product Purchase",
                        "http://localhost:8080/payment/cancel",
                        "http://localhost:8080/payment/success");

                for (Links link : payment.getLinks()) {
                    if (link.getRel().equals("approval_url")) {
                        return new RedirectView(link.getHref()); // Redirect user to PayPal payment page
                    }
                }
            } catch (PayPalRESTException e) {
                e.printStackTrace();
            }
            return new RedirectView("/error");
        }


    
//    @GetMapping("/success")
//    public String paymentSuccess(
//            @RequestParam("paymentId") String paymentId,
//            @RequestParam("payerId") String payerId) {
//        Payment payment = new Payment();
//		if (payment.getState().equals("approved")) {
//		    return "paymentSuccess";
//		}
//        return "paymentSuccess";
//    }
//    
@GetMapping("/success")
public String paymentSuccess(
        @RequestParam("paymentId") String paymentId,
        @RequestParam("PayerID") String payerId) {
    try {
        Payment payment = service.executePayment(paymentId, payerId);
        if (payment.getState().equals("approved")) {
            return "paymentSuccess"; // Redirect to success page
        }
    } catch (PayPalRESTException e) {
        e.printStackTrace();
    }
    return "paymentError";
}

    @GetMapping("/cancel")
    public String paymentCancel() {
        return "index";
    }
    
    @GetMapping("/error")
    public String paymentError() {
        return "index";
    }
}